// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import "./globals.css";
// const inter = Inter({ subsets: ["latin"] });
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>
//         {children}
//         </body>
//     </html>
//   );
// }

// layout.tsx
// import type { Metadata } from "next";
// import { Inter } from "next/font/google";
// import "./globals.css";
// import Header from "@/components/ui/header";
// import Footer from "@/components/ui/footer";

// const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
//   isAuthPage = false,
//   isLoginPage = false,
//   isRegisterPage=false
// }: Readonly<{
//   children: React.ReactNode;
//   isAuthPage?: boolean;
//   isLoginPage?: boolean;
//   isRegisterPage?: boolean;
// }>) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>
//         {!isAuthPage && <Header />} {/* Don't render header on auth pages */}
//         {children}
//         {isLoginPage && isRegisterPage && <Footer />} {/* Render footer only on login page */}
//       </body>
//     </html>
//   );
// }

// layout.tsx
// import { usePathname } from "next/navigation";
// import { Inter } from "next/font/google";
// import "./globals.css";
// import Header from "@/components/ui/header";
// import Footer from "@/components/ui/footer";

// const inter = Inter({ subsets: ["latin"] });
// // Move the metadata outside of the component
// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const pathname = usePathname();
//   // Check if the current page is the login or register page
//   const isLoginPage = pathname === "/login";
//   const isRegisterPage = pathname === "/register";

//   return (
//     <html lang="en">
//       <body className={inter.className}>
//         {!isLoginPage && !isRegisterPage && <Header />}{" "}
//         {/* Don't render header on the login or register page */}
//         {children}
//         {!isLoginPage && !isRegisterPage && <Footer />}{" "}
//         {/* Don't render footer on the login or register page */}
//       </body>
//     </html>
//   );
// }
"use client";
import Footer from "@/components/ui/footer";
import Header from "@/components/ui/header";
import { useEffect, useState } from "react";
import { Inter } from "next/font/google";
import "./globals.css";
const inter = Inter({ subsets: ["latin"] });
// Mock implementation of headers function
async function headers() {
  // Assume some asynchronous logic to retrieve headers
  return new Map([["x-invoke-path", "/some-path"]]); // Mocking with a sample value
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [pathname, setPathname] = useState(""); // Define pathname state variable
  useEffect(() => {
    const fetchData = async () => {
      const headersList = await headers(); // assuming headers is an asynchronous function
      const path = headersList.get("x-invoke-path") || "";
      setPathname(path); // Set pathname state variable
    };

    fetchData();
  }, []);

  const isLoginPage = "/login"; // exclude specific router

  return (
    <html lang="en">
      <body className={inter.className}>
        {pathname !== isLoginPage && <Header />}
        {children}
        {pathname !== isLoginPage && <Footer />}
      </body>
    </html>
  );
}
